{"version":3,"sources":["index.tsx"],"names":["socket","openSocket","App","useState","setBittrexState","useEffect","console","log","emit","optionalPayload","error","on","bittrexData","className"],"mappings":"gLAKMA,G,MAASC,IADE,0BAmCFC,UAhCf,WAAe,MAG2BC,qBAH3B,mBAGQC,GAHR,WAyBb,OAnBAC,qBAAU,WACRC,QAAQC,IAAI,cACZP,EAAOQ,KAAK,mBAAoB,CAAEC,gBAAiB,OAAQ,SAACC,GAC1DJ,QAAQC,IAAI,mDAKhBF,qBAAU,WAERL,EAAOW,GAAG,sBAAsB,SAACC,GAC/BN,QAAQC,IAAI,0CAGZH,EAAgBQ,QAGjB,IAGD,qBAAKC,UAAU,MAAf,SACE,iD","file":"static/js/main.b65cb0bb.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport openSocket from 'socket.io-client';\nimport './App.css';\n\nconst ENDPOINT = \"http://localhost:8000\";\nconst socket = openSocket(ENDPOINT);\n\nfunction App() {\n\n  // put bittrex state here\n  const [bittrexState, setBittrexState] = useState()\n\n  // open up connection to your socket API here\n  useEffect(() => {\n    console.log(\"APP LOADED\")\n    socket.emit('fetchBittrexData', { optionalPayload: null }, (error: any) => {\n      console.log('request sent to API to fetch bittrex data')\n    });\n  },);\n\n  // listen for responses from your socket API here and update state in react\n  useEffect(() => {\n\n    socket.on('recieveBittrexData', (bittrexData: any) => {\n      console.log('Got response from api for bittrex data')\n\n      // set bittrex state here\n      setBittrexState(bittrexData)\n    });\n\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Order Book </h1>\n    </div>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}